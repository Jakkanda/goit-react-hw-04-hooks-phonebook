{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Form/Form.module.css","components/Filter/Filter.module.css","components/Form/Form.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Form","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","reset","preventDefault","className","styled","span","input","type","pattern","title","placeholder","required","onChange","button","ContactList","contacts","onDeleteContact","list","map","contact","item","onClick","id","Filter","App","setContacts","filter","setFilter","useEffect","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContactList","console","log","user","uuidv4","find","alert","prevState","target","state","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fcc88bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__V2HKz\",\"contact\":\"ContactList_contact__19yPq\",\"list\":\"ContactList_list__2R7OA\",\"item\":\"ContactList_item__1Fx1l\",\"span\":\"ContactList_span__1T5Ne\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__35YT_\",\"button\":\"Form_button__1HhKi\",\"span\":\"Form_span__13k5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__16hMV\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from './Form.module.css';\r\n\r\nexport function Form({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit({name, number});\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <span className={styled.span}>Name</span>\r\n      <input\r\n        className={styled.input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        value={name}\r\n        placeholder=\"Tom Red\"\r\n        required\r\n        onChange={handleChange}\r\n      />\r\n      <span className={styled.span}>Number</span>\r\n      <input\r\n        className={styled.input}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        placeholder=\"800-80-00\"\r\n        value={number}\r\n        required\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\" className={styled.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styled from './ContactList.module.css';\r\n\r\nexport function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={styled.list}>\r\n      {contacts.map(contact => {\r\n        return (\r\n          <li key={contact.id} className={styled.item}>\r\n            <div className={styled.contact}>\r\n              <span className={styled.span}>{contact.name} : </span>\r\n              <span className={styled.span}> {contact.number}</span>\r\n              <button\r\n                onClick={() => onDeleteContact(contact.id)}\r\n                className={styled.button}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n};","import React from 'react';\r\nimport styled from './Filter.module.css';\r\n\r\nexport function Filter({value, onChange}) {\r\n  return <input type=\"text\" value={value} onChange={onChange} className={styled.input}></input>;\r\n}\r\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Form } from './components/Form/Form';\nimport { ContactList } from './components/ContactList/ContactList';\nimport { Filter } from './components/Filter/Filter';\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitData = ({ name, number }) => {\n    console.log(name, number);\n    const user = { id: uuidv4(), name, number };\n    const isExists = contacts.find(contact => contact.name === name);\n    if (isExists) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    setContacts(prevState => [...prevState, user]);\n  };\n\n  const filterChange = e => {\n    setFilter(e.target.value);\n  };\n\n  const getVisibleContactList = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  const visibleContacts = getVisibleContactList();\n  const deleteContact = id => {\n    setContacts(state => [...state].filter(contact => contact.id !== id));\n  };\n\n  return (\n    <div className=\"App\">\n      <h2>Phonebook</h2>\n      <Form onSubmit={formSubmitData} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={filterChange} />\n      <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}